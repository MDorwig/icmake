--- a/icmake/comp/callrss.c
+++ b/icmake/comp/callrss.c
@@ -66,6 +66,11 @@ void callrss(ESTRUC_ *e, FUNNR_ funnr, ...)
             type = e_str | e_reg;           /* returning string */
         break;
 
+        case f_trimleft:
+        case f_trimright:
+        case f_trim:
+          type = e_str | e_reg;
+        break;
                                             /* 2 args, returning list */
         case f_stat:
         case f_fgets:                       /* list fgets(string, int) */
@@ -82,6 +87,11 @@ void callrss(ESTRUC_ *e, FUNNR_ funnr, ...)
             args = va_arg(marker, size_t);
         break;
 
+        case f_strformat:
+          args = va_arg(marker, size_t);
+          type = e_str | e_reg;
+        break;
+        
         default:
         /*
             default is entered in the switch to prevent a long compiler 
@@ -100,7 +110,7 @@ void callrss(ESTRUC_ *e, FUNNR_ funnr, ...)
             case f_sizeoflist:
             case f_strlen:
         */
-    break;
+        break;
     }
     if (args)
         gencode (e, op_asp, args);          /* add stack pointer */
diff --git a/icmake/comp/data.c b/icmake/comp/data.c
index 44e8121..06de6bc 100644

diff --git a/icmake/comp/iccomp.h b/icmake/comp/iccomp.h
index a2a40ec..e2d8ff8 100644
--- a/icmake/comp/iccomp.h
+++ b/icmake/comp/iccomp.h

 extern E_TYPE_
@@ -298,6 +299,7 @@ ESTRUC_ *if_stmnt (ESTRUC_ *, ESTRUC_ *,    /* if code */
 ESTRUC_ *incdec (PREPOST_, OPCODE_,         /* E.g., c++ */
                                ESTRUC_ *);
 ESTRUC_ *indexOp  (ESTRUC_ *, ESTRUC_ *);     /*  [] operator */
+ESTRUC_ *attribute(ESTRUC_ *);                /*  . operator */
 ESTRUC_ *insertarg (ESTRUC_ *, ESTRUC_ *);/* arg1, before arg2, ... */
 ESTRUC_ *lcast (ESTRUC_ *);                /* cast to list */
 ESTRUC_ *makelist (ESTRUC_ *, E_TYPE_);         /* makelist() */
@@ -312,6 +314,7 @@ ESTRUC_ *not_boolean (ESTRUC_ *);          /* ! code */
 ESTRUC_ *nullframe(ESTRUC_ *e);              /* discard(e) + *e = stackfr(0) */
 ESTRUC_ *old (ESTRUC_ *, ESTRUC_ *);       /* older code */
 ESTRUC_ *onearg (E_TYPE_, ESTRUC_ *);      /* fun(x)  code */
+
 ESTRUC_ *optint_special (E_TYPE_,           /* fun([int,] ...) */
                       ESTRUC_ *, ESTRUC_ *);
 ESTRUC_ *optint_string (E_TYPE_,        /* chdir(), system() */
@@ -379,4 +382,3 @@ void    patchup_false (ESTRUC_ *, int);/* batchpatch truelist */
 void    pop_dead(void);                 /* restore dead-level */
 void    push_dead(void);                /* new dead-level */
 void    semantic (char *, ...);         /* give semantic error */
-
diff --git a/icmake/comp/indexop.c b/icmake/comp/indexop.c
index 0bca4a6..1ce01ad 100644
--- a/icmake/comp/indexop.c
+++ b/icmake/comp/indexop.c
@@ -46,3 +46,31 @@ ESTRUC_ *indexOp(ESTRUC_ *larg, ESTRUC_ *rarg)
     }
     return (rarg);
 }
+
+ESTRUC_ * attribute(ESTRUC_ * arg)
+{
+	etoc(arg);
+	if (test_type(arg,e_list))
+	{
+		if (strcmp(lexstring,"length") == 0)
+		{
+			callrss(arg,f_sizeoflist);
+		}
+		else
+		{
+			semantic(unknown_attr,lexstring);
+		}
+	}
+	else if (test_type(arg,e_str))
+	{
+		if (strcmp(lexstring,"length") == 0)
+		{
+			callrss(arg,f_strlen);
+		}
+		else
+		{
+			semantic(unknown_attr,lexstring);
+		}
+	}
+	return arg ;
+}

diff --git a/icmake/comp/makefile.targets b/icmake/comp/makefile.targets
new file mode 100644
index 0000000..a62183f
--- /dev/null
+++ b/icmake/comp/makefile.targets
@@ -0,0 +1,5 @@
+../parser.c : ../parser
+	bison -r state -d $< -o $@
+	
+../lexer.c: ../lexer
+	flex -o $@ $<




= FBB ==================================================================


diff --git a/icmake/rss/icrss.h b/icmake/rss/icrss.h
index d941b2d..3969fcf 100644
--- a/icmake/rss/icrss.h
+++ b/icmake/rss/icrss.h
@@ -267,6 +267,7 @@ typedef enum                                /* names of rss-functions */
     f_str_el,
     f_strlwr,                               /* only used by the compiler */
     f_strupr,                               /* only used by the compiler */
+    f_strformat,
     f_system,
 
                       /* reserved rss function opcodes for subreleases */
@@ -275,6 +276,9 @@ typedef enum                                /* names of rss-functions */
     f_getpid,                               /* used by several programs  */
 
     f_substr,
+    f_trim,
+    f_trimleft,
+    f_trimright,
     f_getenv,
 
     f_backtick,                             /* 4 left until f_hlt */
diff --git a/icmake/un/.gitignore b/icmake/un/.gitignore
new file mode 100644
index 0000000..3df573f
--- /dev/null
+++ b/icmake/un/.gitignore
@@ -0,0 +1 @@
+/Debug/
diff --git a/icmake/un/data.c b/icmake/un/data.c
index 3e2a92c..33672ab 100644
--- a/icmake/un/data.c
+++ b/icmake/un/data.c
@@ -44,6 +44,7 @@ char
         "string_element",
         "strlwr",
         "strupr",
+        "strformat",
         "system",
 
         "strlen",
@@ -51,6 +52,10 @@ char
         "getpid",
 
         "substr",
+        "trim",
+        "trimleft",
+        "trimright",
+
         "getenv",
         "backtick",
     };
