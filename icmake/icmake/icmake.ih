#include "../rss/rss.h"

#include <unistd.h>
#include <stdarg.h>
#include <signal.h>
#include <string.h>
#include <stdlib.h>

#include "../tmp/INSTALL.im"

#ifdef SUN
#include <memory.h>
#endif


typedef enum
{
    f_preprocess    =   (1 << 0),
    f_compile       =   (1 << 1),
    f_about         =   (1 << 2),
    f_redirected    =   (1 << 3),
    f_icmexec       =   (1 << 4),
    f_im            =   (1 << 5),
    f_tmpBim        =   (1 << 6),
    f_help          =   (1 << 7),

    f_rmBim         =   (1 << 8),
    f_rmPim         =   (1 << 9)
} FLAGS_;

extern char const icm_comp[];
extern char const icm_exec[];
extern char const icm_pp[];

extern char const *imFile;
extern char const *pimFile;
extern char const *bimFile;

extern FILE *fdest;
extern FLAGS_ flags;

size_t  options(int argc,  char **argv);    /* process flags */
void    cleanup(void);                      /* cleanup temp. info */
void    usage(char const *progname);
void    about(char const *program);         /* about icmake */
void    execute(int temporary, char const *source, char **argv);
void    preProcess(char const *argv2);
void    compile(void);
char   *tryFile(char const *file, char const *ext);
int     doCompile(void);              /* 1 if compilation is needed */
int     spawnlp(int mode, char const *prog, char const *av0, ...);


//void        copyright(char const *program);
//void    abnormal_exit(int);                 /* abnormal eop */
//void    quote_blanks(char **);              /* quote arguments with blanks */

//char     *trySoource(char const *);         /* return allocated source[.im] */
//void literalSource(int argc, char **argv);











