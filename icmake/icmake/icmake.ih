#include "../rss/rss.h"

#include <unistd.h>
#include <stdarg.h>
#include <signal.h>
#include <string.h>
#include <stdlib.h>

#include "../tmp/INSTALL.im"

#ifdef SUN
#include <memory.h>
#endif


typedef enum
{
    f_preProcess    =   (1 << 0),       /* command-line action options */
    f_compile       =   (1 << 1),

    f_icmexec       =   (1 << 2),
    f_im            =   (1 << 3),
    f_tmpBim        =   (1 << 4),
                                        /* selects all command-line actions */
    f_commandMask   =   ((1 << 5) - 1),

    f_about         =   (1 << 5),       /* command-line info requests */
    f_help          =   (1 << 6),

    f_rmBim         =   (1 << 7),       /* removal flags        */
    f_rmPim         =   (1 << 8),

    f_doPreProcess  =   (1 <<  9),      /* action flags         */
    f_doCompile     =   (1 << 10),
    f_doExec        =   (1 << 11)

} FLAGS_;

extern char icm_comp[];
extern char icm_exec[];
extern char icm_pp[];

extern char *imFile;
extern char *pimFile;
extern char *bimFile;

extern FILE *fdest;
extern FLAGS_ flags;
extern size_t execArgIdx;

                                                
void options(int argc, char **argv);        /* process flags */
int  optChars(char const *program, char const *options, char **argv);
void directExecuteOpt(char const *argv1);
void compileOpt(char **argv);
void imOpt(char **argv);
void tmpBimOpt(char **argv);
void preProcessOpt(char **argv);
void stdFiles(char **argv);                 /* also calls testCompile */
void noOptions(char **argv);

void    cleanup(void);                      /* cleanup temp. info */
void    usage(char const *progname);
void    about(char const *program);         /* about icmake */

void    execute(char **argv);
void    preProcess(void);
void    compile(void);

char   *accessFile(char const *file, char const *ext); /* file must exist */
void    testCompile(void);

int     spawnlp(int mode, char const *prog, char const *av0, ...);
void    inspectFlags(char const *program);
char   *useFile(char const *argv2, char const *ext);

//void    setFiles(char **argv);
//void        copyright(char const *program);
//void    abnormal_exit(int);                 /* abnormal eop */
//void    quote_blanks(char **);              /* quote arguments with blanks */

//char     *trySoource(char const *);         /* return allocated source[.im] */
//void literalSource(int argc, char **argv);











