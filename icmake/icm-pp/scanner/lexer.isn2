%{

#include "scanner.ih"
#define YY_NO_INPUT

%}

%option 8bit  yylineno

%x string comment pointed incstr define

ident       [[:alpha:]_][[:alnum:]_]*   

%%

"//".*                              /* ignore eoln comment */

    /* line continuation is converted to a single blank */
"\\"\n  |
[ \t]+                              return ' ';

    /* Comment becomes a single space */
"/*"                                BEGIN comment; 

<comment>.|\n                       /* ignore chars inside comment */

<comment>"*/"                       {
                                        BEGIN INITIAL;
                                        return ' ';
                                    }

"<"[^>]+">"                         /* TO DO: POINTED (IM) FILE NAMES */

    /* NTBSs are returned as STRING */
"\""                                {   
                                        yymore();
                                        BEGIN string;
                                    }
<string>\"                          {
                                        BEGIN INITIAL;
                                        return STRING;
                                    }
<string>"\\".|.                     yymore();

{ident}                             return IDENT;

[[:digit:]]+        |
0x[[:xdigit:]]+                     return WORD;


#include                            

<incstr>\"                          {
                                        if (state_active())
                                            yypush_buffer_state(
                                                yy_create_buffer(
                                                    sc_pushFile(),
                                                    YY_BUF_SIZE
                                                )
                                            );
                                        BEGIN INITIAL;
                                    }

<incstr>"\\."               |
<incstr>.                           yymore();


^[ \t]*#undef[ \t]+                 return UNDEF;
^[ \t]*#ifdef[ \t]+                 return IFDEF;
^[ \t]*#ifndef[ \t]+                return IFNDEF;
^[ \t]*#else                        return ELSE;
^[ \t]*#endif                       return ENDIF;


^[ \t]*#define[ \t]{ident}          {
                                        sc_startDefinition();
                                        BEGIN define;
                                    }

<define>.                           sc_appendDefinition(0);
<define>.*\\\n                      sc_appendDefinition(1);
<define>\n                          {
                                        BEGIN INITIAL;
                                        return DEFINE;
                                    }

.                                   return WORD;

\n                                  return '\n';

<<EOF>>                             {
                                        yypop_buffer_state();
                                        yylineno = 
                                                filestack_tos()->popLineNr;
                                        filestack_pop();
                                        if (filestack_size() == 0)
                                            yyterminate();
                                    }



