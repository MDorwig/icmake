#include "symtab.h"

#include <string.h>
#include <stdlib.h>

#include "../global.h"
#include "../util/util.h"

typedef struct
{
    size_t nSymbols;                           /* defined SYMBOL_s */
    size_t capacity;                           /* available memory */
    Symbol *symbol;
} Symtab;


extern Symtab *gs_functions;   /* symbol table for functions */


extern Symtab *gs_variables;   /* symbol table for variables */
extern size_t gs_nVartab;
extern size_t gs_vartabCap;

extern size_t *gs_nLocals;      /* number of local vars in nested levels */
extern size_t gs_depth;        
extern size_t gs_depthCap;


void st_init(Symtab **ptr, size_t count);
void st_symtabInit(Symtab *location);

Symbol *st_next(Symtab *symtabptr); /* return addr. of next available elem. */

int st_find(Symtab *symtab);        /* returns -1 if not found */
void st_free(Symtab *table);        /* free the name fiels of the table */
